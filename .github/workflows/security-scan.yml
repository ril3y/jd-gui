name: Security Scanning

on:
  push:
    branches: [ master, develop, feature-* ]
  pull_request:
    branches: [ master, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  secret-scan:
    name: Secret Detection Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for comprehensive scanning

    - name: Run Gitleaks Secret Scanner
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # Only required for Gitleaks Enterprise

    - name: Run TruffleHog Secret Scanner (Alternative)
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Initialize submodules
      run: |
        git submodule init
        git submodule update

    - name: Run OWASP Dependency Check
      run: |
        ./gradlew dependencyCheckAnalyze --info || true

    - name: Upload Dependency Check Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: |
          **/build/reports/dependency-check-report.html
          **/build/reports/dependency-check-report.xml

  code-scan:
    name: Code Security Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Initialize submodules
      run: |
        git submodule init
        git submodule update

    - name: Build project for CodeQL
      run: |
        ./gradlew build -x test --no-daemon

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:java"